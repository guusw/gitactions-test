name: Watch PR edits
on:
  pull_request:
    types: [edited]
jobs:
  pr-edit-check:
    # This job only runs for pull request comments
    name: Workflow re-run trigger
    runs-on: ubuntu-latest
    steps:
      - name: Script
        uses: actions/github-script@v6
        with:
          script: |
            function parseTags(text) {
              const regexp = /!(\w+)(=[^\s]+)?/g;
              const tagMatches = [...text.matchAll(regexp)];
              return tagMatches;
            }

            async function rerequestRun() {
              const pr = context.payload.pull_request;
              const pullNumber = pr ? pr.number : 4;
              const repository = context.payload.repository;

              const pr1 = await github.rest.pulls.get({
                owner: repository.owner.login,
                repo: repository.name,
                pull_number: pullNumber,
              });
              const head = pr1.data.head;

              let runs = await github.rest.actions.listWorkflowRuns({
                owner: repository.owner.login,
                repo: repository.name,
                workflow_id: "blank.yml",
                branch: head.ref,
              });

              let actualRuns = runs.data.workflow_runs;
              if(actualRuns.length > 0) {
                let id = actualRuns[0].id;
                await github.rest.actions.reRunWorkflow({
                  owner: repository.owner.login,
                  repo: repository.name,
                  run_id: id,
                });
              }
            }

            const pr = context.payload.pull_request;
            const changes = context.payload.changes;
            if(changes.body) {
              const tagsA = JSON.stringify(parseTags(changes.body.from));
              const tagsB = JSON.stringify(parseTags(pr.body));
              if(tagsA != tagsB) {
                console.log("Tag changes detected", tagsA, "=>", tagsB);
                var hasSkipRun = false;
                for(const match of tagsB) {
                  if(match[1] == "noci") {
                    hasSkipRun = true;
                    break;
                  }
                }
                if(!hasSkipRun)
                  await rerequestRun();
              }
            }
